DynamicModule[
 {$jsonPath = "D:\\RMGames\\Akademia\\data\\SkillTrees.json", 
  arrows = {}, arrow = {}, BeginMove, OnMoving, EndMove, LoadData, 
  FromPolar, FromIndex, CalcIndex, temp, 
  vl = Range[24*8 + 1](*vertex list*), 
  am = Table[0, {i, 1, 24*8 + 1}, {j, 1, 24*8 + 1}](*adjacency matrix*),
   nodes = {}, node, gala = "GALA_NERO"},
 LoadData[] := (
   temp = Import[$jsonPath, "RawJSON"];
   vl = temp[gala]["vertex"];
   am = temp[gala]["matrix"];
   arrows = {}; nodes = {};
   Table[If[StringQ[vl[[i]]], 
     AppendTo[nodes, 
      Tooltip[Disk[FromIndex[i], 2], 
       Style[ToString[i] <> ": " <> vl[[i]], "Title"]]]], {i, 1, 
     Length@vl}];
   temp = Position[am, 1];
   AppendTo[arrows, Arrow[{FromIndex[#[[1]]], FromIndex[#[[2]]]}]] & /@
     temp;
   );
 FromIndex[
   index_] := #[[1]] {Cos[#[[2]]], Sin[#[[2]]]} &@(If[
      Mod[index - 1, 8] == 0, {8, 
       Quotient[index - 1, 8] - 1}, {Mod[index - 1, 8], 
       Quotient[index - 1, 8]}]*{12, Pi/12});
 FromIndex[1] = {0, 0};
 FromPolar[coord_] := 
  If[coord[[1]] == 0, {0, 0}, 
   If[coord[[2]] == -Pi, {-coord[[1]], 0}, 
    FromPolarCoordinates[coord]]];
 CalcIndex[co_] := 
  Total[Round[
      If[#[[2]] < 0, {#[[1]], #[[2]] + 2 Pi}, #] &[
        If[# == {0, 0}, {0, 0}, ToPolarCoordinates@#] &[co]]*{1/12, 
        12/Pi}]*{1, 8}] + 1;
 BeginMove[] := (arrow = 
    Arrow[{FromPolar[
       Round[ToPolarCoordinates@MousePosition["Graphics"]*{1/12, 
           12/Pi}]*{12, Pi/12}], {0, 0}}]);
 OnMoving[] := (arrow[[1, 2]] = 
    FromPolar[
     Round[ToPolarCoordinates@MousePosition["Graphics"]*{1/12, 
         12/Pi}]*{12, Pi/12}]);
 EndMove[] := (
   If[arrow[[1, 1]] != arrow[[1, 2]],
    am[[CalcIndex@arrow[[1, 1]], CalcIndex@arrow[[1, 2]]]] = 1;
    AppendTo[arrows, arrow]; arrow = {};,
    vl[[CalcIndex@arrow[[1, 1]]]] = node;
    If[StringQ[node] && node != "$schema", 
     AppendTo[nodes, 
       Tooltip[Disk[arrow[[1, 1]], 2], 
        Style[ToString@CalcIndex@arrow[[1, 1]] <> ": " <> node, 
         "Title"]]];];
    ]
   );
 Row[{
   Column[{
     Style[Row@{"Node number: ", Dynamic@Length[arrows]}, "Title"],
     PopupMenu[Dynamic@node, 
      Keys@Import["D:\\RMGames\\Akademia\\data\\SkillTreeNodes.json", 
        "RawJSON"]],
     Button["Save Adjacency Matrix to $am", $am = am;],
     Button["Preview Graph", 
      MessageDialog[
       AdjacencyGraph[am, DirectedEdges -> True, 
        GraphLayout -> "CircularMultipartiteEmbedding", 
        VertexLabels -> Table[i -> vl[[i]], {i, 1, 193}]]]],
     Button["Save Result", temp = Import[$jsonPath, "RawJSON"]; 
      AssociateTo[temp, gala -> <|"vertex" -> vl, "matrix" -> am|>]; 
      Export[$jsonPath, temp, "Compact" -> True];],
     Button["Undo Arrow", 
      If[Length@arrows > 0, temp = Last@arrows; 
       am[[CalcIndex@temp[[1, 1]], CalcIndex@temp[[1, 2]]]] = 0; 
       arrows = Drop[arrows, -1]]],
     InputField[Dynamic[gala], String],
     Button["Read Tree", LoadData[];]
     }],
   EventHandler[
    Graphics[{Directive[Cyan], EdgeForm[Directive[Thick, Black]],
      Table[
       Disk[d*{Cos[\[Theta]], Sin[\[Theta]]}, 2], {d, 0, 12*8, 
        12}, {\[Theta], 0, 2 Pi, 1/12 Pi}]
      , Directive[Blue], EdgeForm[Directive[Thick, LightBlue]], 
      Dynamic@nodes, Arrowheads[0.02], Directive[Red, Thick], 
      Dynamic@arrows, Directive[Blue], Dynamic@arrow}, 
     ImageSize -> 800]
    ,
    {"MouseDown" :> (BeginMove[]; OnMoving[]),
     "MouseDragged" :> (OnMoving[]),
     "MouseUp" :> (EndMove[])
     }
    ]
   }]
 ]
